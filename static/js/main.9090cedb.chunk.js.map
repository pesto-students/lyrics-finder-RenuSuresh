{"version":3,"sources":["services/API/axios.js","assets/Dog-swimming.png","Components/Table/Table.js","Components/SongLyrics/SongLyrics.js","assets/hero-background.jpg","Components/SearchResult/SearchResult.js","Components/Header/Header.js","Components/Rows/Row.js","Components/MainBody/MainBody.js","App.js","reportWebVitals.js","index.js"],"names":["getSuggest","axios","create","baseURL","getLyrics","Table","LyricsHeader","music","lyrics","artist","title","albumTitle","picture","className","src","alt","onClick","doc","jsPDF","y","internal","pageSize","height","addPage","setFont","setFontSize","text","replace","save","SongLyrics","useState","setLyrics","isLoading","setIsLoading","useEffect","artistTitle","a","get","request","data","fetchLyrics","loading","color","logo","SearchResult","musicType","console","log","setLoading","searchResult","setSearchResult","currentPage","setCurrentPage","SetMusic","fetchData","offset","currentPageData","slice","map","Element","i","event","name","album","picture_medium","tabIndex","defaultImage","id","pageCount","Math","ceil","length","previousLabel","nextLabel","onPageChange","selectedPage","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Header","toggleHome","search","setSearch","isSearch","setIsSearch","isError","setIsError","getSearch","style","display","flexDirection","placeholder","onChange","e","target","value","onKeyDown","keyCode","data-testid","fontSize","marginTop","Row","genreType","genre","setGenre","role","MainBody","showHome","setShowHome","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9090cedb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst getSuggest = axios.create({\r\n  baseURL: \"https://api.lyrics.ovh/suggest/\",\r\n});\r\n\r\nconst getLyrics = axios.create({\r\n  baseURL: \"https://api.lyrics.ovh/v1/\",\r\n});\r\nexport { getSuggest, getLyrics };\r\n","export default __webpack_public_path__ + \"static/media/Dog-swimming.8b3b94ca.png\";","import React, { useEffect, useState, useContext } from \"react\";\r\nimport \"./Table.css\";\r\nimport { getSuggest } from \"../../services/API/axios\";\r\nimport LyricsModal from \"../LyricsModal/LyricsModal\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst GenreContext = React.createContext(null);\r\n\r\nfunction SearchResult() {\r\n  const [artist, setArtist] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [albumTitle, setAlbumTitle] = useState(\"\");\r\n\r\n  const currentGenreContextValue = useContext(GenreContext);\r\n  const currentGenre = currentGenreContextValue.currentGenre;\r\n\r\n  const getLyrics = (artist, title, album_title, image) => {\r\n    setTitle(title);\r\n    setArtist(artist);\r\n    setImage(image);\r\n    setAlbumTitle(album_title);\r\n  };\r\n  const setArtistEmpty = () => {\r\n    setArtist(\"\");\r\n  };\r\n  if (currentGenre.length <= 0) {\r\n    return <h1 style={{ color: \"white\" }}>No data available!!!</h1>;\r\n  }\r\n  return (\r\n    <>\r\n      <table data-testid=\"home-table\">\r\n        <tbody>\r\n          {currentGenre.map((Element) => (\r\n            <tr\r\n              key={Element.id}\r\n              onClick={() =>\r\n                getLyrics(\r\n                  Element.artist.name,\r\n                  Element.title,\r\n                  Element.album.title,\r\n                  Element.artist.picture_medium\r\n                )\r\n              }\r\n              data-testid={`row-${Element.id}`}\r\n            >\r\n              <td className=\"table__img__col\">\r\n                <img src={Element.album.cover_small} alt=\"album\" />\r\n              </td>\r\n              <td className=\"table__info\">\r\n                <span className=\"table__album\">{Element.album.title}</span>\r\n                <span className=\"table__title\">{Element.title}</span>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {artist && (\r\n        <LyricsModal\r\n          artist={artist}\r\n          title={title}\r\n          image={image}\r\n          album_title={albumTitle}\r\n          setArtistEmpty={setArtistEmpty}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction TableData({ hideTable, musicType, loading }) {\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        className=\"close\"\r\n        onClick={hideTable}\r\n        data-testid=\"close-btn\"\r\n      >\r\n        &times;\r\n      </button>\r\n      <div className=\"table__caption\">\r\n        <p data-testid=\"table-musictype\">{musicType}</p>\r\n      </div>\r\n\r\n      <div className=\"table__table\">\r\n        {loading ? (\r\n          <BeatLoader loading={loading} color={\"#ffffff\"} />\r\n        ) : (\r\n          <SearchResult />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Table({ musicType, hideTable }) {\r\n  const [genre, setGenre] = useState([]);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [genrePerPage] = useState(5);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // get current data\r\n  const indexOfLastGenre = currentPage * genrePerPage;\r\n  const indexOfFirstGenre = indexOfLastGenre - genrePerPage;\r\n  const currentGenre = genre.slice(indexOfFirstGenre, indexOfLastGenre);\r\n\r\n  // change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    async function fetchData() {\r\n      const request = await getSuggest.get(musicType);\r\n      setGenre(request.data.data);\r\n      setLoading(false);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [musicType]);\r\n\r\n  return (\r\n    <div className=\"table__div\">\r\n      <div className=\"table__div__border\">\r\n        <GenreContext.Provider value={{ currentGenre }}>\r\n          <TableData\r\n            hideTable={hideTable}\r\n            musicType={musicType}\r\n            loading={loading}\r\n          />\r\n        </GenreContext.Provider>\r\n        <Pagination\r\n          genrePerPage={genrePerPage}\r\n          totalGenre={genre.length}\r\n          paginate={paginate}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getLyrics } from \"../../services/API/axios\";\r\nimport \"./SongLyrics.css\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport logo from \"../../assets/Dog-swimming.png\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport jsPDF from \"jspdf\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nfunction LyricsHeader({ music, lyrics }) {\r\n  const { artist, title, albumTitle, picture } = music;\r\n\r\n  const download = () => {\r\n    var doc = new jsPDF(\"p\", \"pt\", \"a4\");\r\n    const pageHeight = doc.internal.pageSize.height;\r\n    let y = 500;\r\n    if (y >= pageHeight) {\r\n      doc.addPage();\r\n      y = 0;\r\n    }\r\n    doc.setFont(\"cursive\", \"bold\", 600);\r\n    doc.setFontSize(12);\r\n\r\n    doc.text(200, 20, artist);\r\n    doc.text(200, 40, albumTitle);\r\n    doc.setFontSize(10);\r\n    doc.text(20, 70, `${lyrics.lyrics.replace(/\\r/g, \"\\r\\n\\n\")}`);\r\n\r\n    doc.save(`${title}.pdf`);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"songlyrics__header\">\r\n        <div className=\"songlyrics__data\">\r\n          <img src={picture} alt=\"album\" className=\"songlyrics__image\" />\r\n          <div className=\"songlyrics__caption\">\r\n            <span className=\"songlyrics__title\">\r\n              <AlbumIcon className=\"songlyrics__header__icon\" />\r\n              &nbsp;\r\n              {albumTitle}\r\n            </span>\r\n            <span className=\"songlyrics__artist\">\r\n              <PersonIcon className=\"songlyrics__header__icon\" />\r\n              &nbsp;\r\n              {artist}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <button onClick={download} className=\"songlyrics__download\">\r\n          <GetAppIcon />\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction SongLyrics({ music }) {\r\n  const { artist, title, albumTitle, picture } = music;\r\n  const [lyrics, setLyrics] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const artistTitle = `${artist}/${title}`;\r\n    setIsLoading(true);\r\n\r\n    async function fetchLyrics() {\r\n      const request = await getLyrics.get(artistTitle);\r\n      setIsLoading(false);\r\n      setLyrics(request.data);\r\n      return request;\r\n    }\r\n\r\n    fetchLyrics();\r\n  }, [artist, title, albumTitle]);\r\n\r\n  return (\r\n    <div className=\"songlyrics\">\r\n      <LyricsHeader music={music} lyrics={lyrics} />\r\n      <div className=\"songlyrics__div\">\r\n        {lyrics.lyrics && !isLoading ? (\r\n          <>\r\n            <pre>{lyrics.lyrics.replace(/\\r/g, \"\\r\\n\\n\")}</pre>\r\n          </>\r\n        ) : !lyrics.lyrics && !isLoading ? (\r\n          <div className=\"songlyrics__error__content\">\r\n            <img src={logo} className=\"songlyrics__error\" alt=\"error\" />\r\n            <p>Sorry no Lyrics Found!!!</p>\r\n          </div>\r\n        ) : (\r\n          <BeatLoader loading=\"true\" color={\"#ffffff\"} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SongLyrics;\r\n","export default __webpack_public_path__ + \"static/media/hero-background.182a0bbc.jpg\";","import React, { useEffect, useState } from \"react\";\r\nimport { getSuggest } from \"../../services/API/axios\";\r\nimport \"./SearchResult.css\";\r\nimport SongLyrics from \"../SongLyrics/SongLyrics\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport logo from \"../../assets/Dog-swimming.png\";\r\nimport defaultImage from \"../../assets/hero-background.jpg\";\r\n\r\nfunction SearchResult({ musicType }) {\r\n  console.log(\"music type in search result\", musicType);\r\n  const PER_PAGE = 7;\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const [music, SetMusic] = useState({\r\n    artist: \"\",\r\n    title: \"\",\r\n    albumTitle: \"\",\r\n    picture: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    async function fetchData() {\r\n      const request = await getSuggest.get(musicType);\r\n      setSearchResult(request.data.data);\r\n      setLoading(false);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [musicType]);\r\n\r\n  function handlePageClick({ selected: selectedPage }) {\r\n    setCurrentPage(selectedPage);\r\n  }\r\n  const offset = currentPage * PER_PAGE;\r\n\r\n  const currentPageData = searchResult\r\n    .slice(offset, offset + PER_PAGE)\r\n    .map((Element, i) => (\r\n      <div\r\n        className=\"search__row__card\"\r\n        onClick={() => getLyrics(Element)}\r\n        tabIndex={0}\r\n        key={Element.id}\r\n      >\r\n        <img src={Element.artist.picture_medium} alt={defaultImage} />\r\n        <div className=\"search__row__album__title\">\r\n          <PersonIcon />\r\n          <label>{Element.artist.name}</label>\r\n        </div>\r\n        <div className=\"search__row__album__title\">\r\n          <AlbumIcon />\r\n          <label>{Element.album.title}</label>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  const pageCount = Math.ceil(searchResult.length / PER_PAGE);\r\n\r\n  function getLyrics(event) {\r\n    SetMusic({\r\n      artist: event.artist.name,\r\n      title: event.title,\r\n      albumTitle: event.album.title,\r\n      picture: event.artist.picture_medium,\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <label className=\"search__label\"> Search Result</label>\r\n\r\n      <label className=\"search__musictype\"> : {musicType}</label>\r\n      <div>\r\n        {!loading && searchResult.length == 0 ? (\r\n          <h1>No data available</h1>\r\n        ) : !loading && searchResult.length > 0 ? (\r\n          <>\r\n            <div className=\"search__row\">\r\n              <div className=\"search__current__page\">{currentPageData}</div>\r\n            </div>\r\n            <div className=\"search__paginate\">\r\n              <ReactPaginate\r\n                previousLabel={\"←\"}\r\n                nextLabel={\"→\"}\r\n                pageCount={pageCount}\r\n                onPageChange={handlePageClick}\r\n                containerClassName={\"pagination\"}\r\n                previousLinkClassName={\"pagination__link\"}\r\n                nextLinkClassName={\"pagination__link\"}\r\n                disabledClassName={\"pagination__link--disabled\"}\r\n                activeClassName={\"pagination__link--active\"}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <BeatLoader loading=\"true\" color={\"#ffffff\"} />\r\n        )}\r\n      </div>\r\n      {music.artist && <SongLyrics music={music} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React, { useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport Table from \"../Table/Table\";\r\nimport SearchResult from \"../SearchResult/SearchResult\";\r\n\r\nfunction Header({ toggleHome }) {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isSearch, setIsSearch] = useState(false);\r\n  const [isError, setIsError] = useState(\"\");\r\n  const getSearch = () => {\r\n    if (search) {\r\n      setIsSearch(true);\r\n      toggleHome(false);\r\n    } else {\r\n      toggleHome(false);\r\n      setIsError(true);\r\n    }\r\n  };\r\n  const hideTable = () => {\r\n    setIsSearch(false);\r\n    toggleHome(true);\r\n    setSearch(\"\");\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n        <p className=\"header__name font-effect-shadow-multiple\">\r\n          Lyrics Finder\r\n        </p>\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div className=\"header__search\">\r\n            <input\r\n              className=\"header__input__search\"\r\n              placeholder=\"Search by Artist/ Song\"\r\n              name=\"search\"\r\n              onChange={(e) => {\r\n                setSearch(e.target.value);\r\n                setIsError(false);\r\n              }}\r\n              onKeyDown={(event) => {\r\n                if (event.keyCode === 13) {\r\n                  getSearch();\r\n                }\r\n              }}\r\n              value={search}\r\n              data-testid=\"header-search\"\r\n            />\r\n\r\n            <button\r\n              className=\"header__searchbtn\"\r\n              onClick={getSearch}\r\n              data-testid=\"search-btn\"\r\n            >\r\n              <i className=\"fa fa-search\"></i>\r\n            </button>\r\n          </div>\r\n          {isError && (\r\n            <p\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"12px\",\r\n                marginTop: \"1%\",\r\n              }}\r\n              data-testid=\"error-text\"\r\n            >\r\n              * This field is required.\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {isSearch && search ? <SearchResult musicType={search} /> : \"\"}\r\n\r\n      {/* {isSearch && <Table musicType={search} hideTable={hideTable} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getSuggest } from \"../../services/API/axios\";\r\nimport \"./Row.css\";\r\nimport SongLyrics from \"../SongLyrics/SongLyrics\";\r\nimport AlbumIcon from \"@material-ui/icons/Album\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nfunction Row({ genreType }) {\r\n  const [genre, setGenre] = useState([]);\r\n  const [music, SetMusic] = useState({\r\n    artist: \"\",\r\n    title: \"\",\r\n    albumTitle: \"\",\r\n    picture: \"\",\r\n  });\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await getSuggest.get(genreType);\r\n      console.log(request.data.data);\r\n      setGenre(request.data.data);\r\n      //   setLoading(false);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [genreType]);\r\n\r\n  function getLyrics(event) {\r\n    SetMusic({\r\n      artist: event.artist.name,\r\n      title: event.title,\r\n      albumTitle: event.album.title,\r\n      picture: event.artist.picture_medium,\r\n    });\r\n    // SetMusic(event);\r\n  }\r\n  return (\r\n    <div>\r\n      <label className=\"row__genre\"> {genreType}</label>\r\n\r\n      <div className=\"row__row\">\r\n        {genre.map((Element) => (\r\n          <div\r\n            className=\"row__card\"\r\n            onClick={() => getLyrics(Element)}\r\n            key={Element.id}\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onKeyDown={(event) => {\r\n              if (event.keyCode === 13) {\r\n                getLyrics(Element);\r\n              }\r\n            }}\r\n          >\r\n            <img src={Element.artist.picture_medium} alt=\"\" />\r\n            <div className=\"row__album__title\">\r\n              <PersonIcon />\r\n              <label>{Element.artist.name}</label>\r\n            </div>\r\n            <div className=\"row__album__title\">\r\n              <AlbumIcon />\r\n              <label>{Element.album.title}</label>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {music.artist && <SongLyrics music={music} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState } from \"react\";\r\nimport Home from \"../Home/Home\";\r\nimport Header from \"../Header/Header\";\r\nimport Row from \"../Rows/Row\";\r\n\r\nfunction MainBody() {\r\n  const [showHome, setShowHome] = useState(true);\r\n  const toggleHome = (event = true) => {\r\n    setShowHome(event);\r\n  };\r\n  return (\r\n    <div>\r\n      <Header toggleHome={toggleHome} showHome={showHome} />\r\n\r\n      {/* {showHome && <Home />} */}\r\n      <>\r\n        <Row genreType=\"popular\" />\r\n        <Row genreType=\"soul music\" />\r\n        <Row genreType=\"orchestra\" />\r\n        <Row genreType=\"country music\" />\r\n        <Row genreType=\"rock\" />\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainBody;\r\n","import \"./App.css\";\nimport MainBody from \"./Components/MainBody/MainBody\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <MainBody />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}